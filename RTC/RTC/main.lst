MPASM  5.35beta                          MAIN.ASM   6-1-2010  13:03:29         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001       list p=16f877                 ; list directive to define processor
                      00002       #include <p16f877.inc>        ; processor specific variable definitions
                      00001         LIST
                      00002 ; P16F877.INC  Standard Header File, Version 1.00    Microchip Technology, Inc.
                      00373         LIST
2007   3FF2           00003       __CONFIG _CP_OFF & _WDT_OFF & _BODEN_ON & _PWRTE_ON & _HS_OSC & _WRT_ENABLE_ON & _CPD_OFF & _LVP_O
                            N
                      00004 
                      00005       #include <lcd.inc>                           ;Import LCD control functions from lcd.asm
  0000                00001         extern  InitLCD,WR_INS,WR_DATA,ClrLCD
                      00006           #include <rtc_macros.inc>
                      00001         ;External labels
  0000                00002         extern  write_rtc,read_rtc,rtc_convert,i2c_common_setup
                      00003 
                      00004 ;RTC Macros;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00005 
                      00006 rtc_resetAll    macro
                      00007 ;input:         none
                      00008 ;output:        none
                      00009 ;desc:          Resets all the time keeping registers on the RTC to zero
                      00010         banksel         0x74
                      00011         clrf            0x74
                      00012         banksel         0x73
                      00013         clrf            0x73
                      00014     call        write_rtc               ;Write 0 to Seconds
                      00015         banksel         0x73
                      00016     incf        0x73                    ;Set register address to 1
                      00017         call            write_rtc
                      00018         banksel         0x73
                      00019     incf        0x73                    ;Set register address to 2
                      00020         call            write_rtc
                      00021         banksel         0x73
                      00022     incf        0x73                    ;Set register address to 3
                      00023         call            write_rtc
                      00024         banksel         0x73
                      00025     incf        0x73                    ;Set register address to 4
                      00026         call            write_rtc
                      00027         banksel         0x73
                      00028     incf        0x73                    ;Set register address to 5
                      00029         call            write_rtc
                      00030         banksel         0x73
                      00031     incf        0x73                    ;Set register address to 6
                      00032         call            write_rtc
                      00033         endm
                      00034 
                      00035 rtc_set         macro   addliteral,datliteral
                      00036 ;input:         addliteral: value of address
                      00037 ;                       datliteral: value of data
                      00038 ;output:        none
                      00039 ;desc:          loads the data in datliteral into the 
                      00040 ;                       address specified by addliteral in the RTC
                      00041         banksel 0x73
                      00042         movlw   addliteral
MPASM  5.35beta                          MAIN.ASM   6-1-2010  13:03:29         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00043         movwf   0x73
                      00044         banksel 0x74
                      00045         movlw   datliteral
                      00046         movwf   0x74    
                      00047         call    write_rtc
                      00048         endm
                      00049 
                      00050 rtc_read        macro   addliteral
                      00051 ;input:         addliteral
                      00052 ;output:        0x75, 0x77, 0x78
                      00053 ;desc:          From the selected register in the RTC, read the data
                      00054 ;                       and load it into 0x75. 0x75 is also converted into 
                      00055 ;                       ASCII characters and the tens digit is placed into
                      00056 ;                       0x77 and the ones digit is placed in 0x78
                      00057         movlw   addliteral
                      00058         banksel 0x73
                      00059         movwf   0x73
                      00060         call    read_rtc
                      00061         banksel 0x75
                      00062         movf    0x75,w
                      00063         call    rtc_convert   
                      00064         endm
                      00007 
                      00008         udata_shr
Warning[207]: Found label after column 1. (COUNTH)
0000                  00009         COUNTH  res 1   ;const used in delay
Warning[207]: Found label after column 1. (COUNTM)
0001                  00010         COUNTM  res     1       ;const used in delay
Warning[207]: Found label after column 1. (COUNTL)
0002                  00011         COUNTL  res     1       ;const used in delay
                      00012         
                      00013 
                      00014          ORG       0x0000     ;RESET vector must always be at 0x00
0000   2???           00015          goto      init       ;Just jump to the main code section.
                      00016          
                      00017          ORG       0x100
                      00018 
                      00019 ;***************************************
                      00020 ; Initilization of both LCD and RTC
                      00021 ;***************************************
0100                  00022 init
0100   018B           00023          clrf      INTCON         ; No interrupts
                      00024 
0101   1683           00025          bsf       STATUS,RP0     ; select bank 1
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0102   0185           00026          clrf      TRISA          ; All port A is output
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0103   0186           00027          clrf      TRISB                  ; All port B is output
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0104   0187           00028          clrf      TRISC          ; All port C is output
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0105   0188           00029          clrf      TRISD          ; All port D is output
                      00030 
MPASM  5.35beta                          MAIN.ASM   6-1-2010  13:03:29         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00031          ;Set SDA and SCL to high-Z first as required for I2C
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0106   1607           00032                  bsf       TRISC,4                
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0107   1587           00033                  bsf       TRISC,3
                      00034 
0108   1283           00035          bcf       STATUS,RP0     ; select bank 0
0109   0185           00036          clrf      PORTA
010A   0186           00037          clrf      PORTB
010B   0187           00038          clrf      PORTC
010C   0188           00039          clrf      PORTD
                      00040 
                      00041                  ;Set up I2C for communication
010D   2???           00042                  call      i2c_common_setup
                      00043                  rtc_resetAll
                          M ;input:         none
                          M ;output:        none
                          M ;desc:          Resets all the time keeping registers on the RTC to zero
010E   1283 1303          M         banksel         0x74
0110   01F4               M         clrf            0x74
0111   1283 1303          M         banksel         0x73
0113   01F3               M         clrf            0x73
0114   2???               M     call        write_rtc               ;Write 0 to Seconds
0115   1283 1303          M         banksel         0x73
Message[305]: Using default destination of 1 (file).
0117   0AF3               M     incf        0x73                    ;Set register address to 1
0118   2???               M         call            write_rtc
0119   1283 1303          M         banksel         0x73
Message[305]: Using default destination of 1 (file).
011B   0AF3               M     incf        0x73                    ;Set register address to 2
011C   2???               M         call            write_rtc
011D   1283 1303          M         banksel         0x73
Message[305]: Using default destination of 1 (file).
011F   0AF3               M     incf        0x73                    ;Set register address to 3
0120   2???               M         call            write_rtc
0121   1283 1303          M         banksel         0x73
Message[305]: Using default destination of 1 (file).
0123   0AF3               M     incf        0x73                    ;Set register address to 4
0124   2???               M         call            write_rtc
0125   1283 1303          M         banksel         0x73
Message[305]: Using default destination of 1 (file).
0127   0AF3               M     incf        0x73                    ;Set register address to 5
0128   2???               M         call            write_rtc
0129   1283 1303          M         banksel         0x73
Message[305]: Using default destination of 1 (file).
012B   0AF3               M     incf        0x73                    ;Set register address to 6
012C   2???               M         call            write_rtc
                      00044                  ;Used to set up time in RTC, load to the PIC when RTC is used for the first time
                      00045                  ;call     set_rtc_time
                      00046           
012D   2???           00047          call      InitLCD    ;Initialize the LCD (code in lcd.asm; imported by lcd.inc)
                      00048 
012E                  00049 show_RTC
MPASM  5.35beta                          MAIN.ASM   6-1-2010  13:03:29         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00050                 ;clear LCD screen
012E   3001           00051                 movlw   b'00000001'
012F   2???           00052                 call    WR_INS
                      00053 
                      00054                 ;Get year
0130   3032           00055                 movlw   "2"                             ;First line shows 20**/**/**
0131   2???           00056                 call    WR_DATA
0132   3030           00057                 movlw   "0"
0133   2???           00058                 call    WR_DATA
                      00059                 rtc_read        0x06            ;Read Address 0x06 from DS1307---year
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
0134   3006               M         movlw   0x06
0135   1283 1303          M         banksel 0x73
0137   00F3               M         movwf   0x73
0138   2???               M         call    read_rtc
0139   1283 1303          M         banksel 0x75
013B   0875               M         movf    0x75,w
013C   2???               M         call    rtc_convert   
013D   0877           00060                 movfw   0x77
013E   2???           00061                 call    WR_DATA
013F   0878           00062                 movfw   0x78
0140   2???           00063                 call    WR_DATA
                      00064 
0141   302F           00065                 movlw   "/"
0142   2???           00066                 call    WR_DATA
                      00067 
                      00068                 ;Get month
                      00069                 rtc_read        0x05            ;Read Address 0x05 from DS1307---month
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
0143   3005               M         movlw   0x05
0144   1283 1303          M         banksel 0x73
0146   00F3               M         movwf   0x73
0147   2???               M         call    read_rtc
0148   1283 1303          M         banksel 0x75
014A   0875               M         movf    0x75,w
014B   2???               M         call    rtc_convert   
014C   0877           00070                 movfw   0x77
014D   2???           00071                 call    WR_DATA
014E   0878           00072                 movfw   0x78
014F   2???           00073                 call    WR_DATA
                      00074 
0150   302F           00075                 movlw   "/"
0151   2???           00076                 call    WR_DATA
MPASM  5.35beta                          MAIN.ASM   6-1-2010  13:03:29         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00077 
                      00078                 ;Get day
                      00079                 rtc_read        0x04            ;Read Address 0x04 from DS1307---day
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
0152   3004               M         movlw   0x04
0153   1283 1303          M         banksel 0x73
0155   00F3               M         movwf   0x73
0156   2???               M         call    read_rtc
0157   1283 1303          M         banksel 0x75
0159   0875               M         movf    0x75,w
015A   2???               M         call    rtc_convert   
015B   0877           00080                 movfw   0x77
015C   2???           00081                 call    WR_DATA
015D   0878           00082                 movfw   0x78
015E   2???           00083                 call    WR_DATA
                      00084 
015F   30C0           00085                 movlw   B'11000000'             ;Next line displays (hour):(min):(sec) **:**:**
0160   2???           00086                 call    WR_INS
                      00087 
                      00088                 ;Get hour
                      00089                 rtc_read        0x02            ;Read Address 0x02 from DS1307---hour
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
0161   3002               M         movlw   0x02
0162   1283 1303          M         banksel 0x73
0164   00F3               M         movwf   0x73
0165   2???               M         call    read_rtc
0166   1283 1303          M         banksel 0x75
0168   0875               M         movf    0x75,w
0169   2???               M         call    rtc_convert   
016A   0877           00090                 movfw   0x77
016B   2???           00091                 call    WR_DATA
016C   0878           00092                 movfw   0x78
016D   2???           00093                 call    WR_DATA
016E   303A           00094                 movlw                   ":"
016F   2???           00095                 call    WR_DATA
                      00096 
                      00097                 ;Get minute             
                      00098                 rtc_read        0x01            ;Read Address 0x01 from DS1307---min
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
MPASM  5.35beta                          MAIN.ASM   6-1-2010  13:03:29         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M ;                       0x77 and the ones digit is placed in 0x78
0170   3001               M         movlw   0x01
0171   1283 1303          M         banksel 0x73
0173   00F3               M         movwf   0x73
0174   2???               M         call    read_rtc
0175   1283 1303          M         banksel 0x75
0177   0875               M         movf    0x75,w
0178   2???               M         call    rtc_convert   
0179   0877           00099                 movfw   0x77
017A   2???           00100                 call    WR_DATA
017B   0878           00101                 movfw   0x78
017C   2???           00102                 call    WR_DATA         
017D   303A           00103                 movlw                   ":"
017E   2???           00104                 call    WR_DATA
                      00105                 
                      00106                 ;Get seconds
                      00107                 rtc_read        0x00            ;Read Address 0x00 from DS1307---seconds
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
017F   3000               M         movlw   0x00
0180   1283 1303          M         banksel 0x73
0182   00F3               M         movwf   0x73
0183   2???               M         call    read_rtc
0184   1283 1303          M         banksel 0x75
0186   0875               M         movf    0x75,w
0187   2???               M         call    rtc_convert   
0188   0877           00108                 movfw   0x77
0189   2???           00109                 call    WR_DATA
018A   0878           00110                 movfw   0x78
018B   2???           00111                 call    WR_DATA
                      00112                 
018C   2???           00113                 call    OneS                    ;Delay for exactly one seconds and read DS1307 again
018D   2???           00114                 goto    show_RTC
                      00115 
                      00116 ;***************************************
                      00117 ; Setup RTC with time defined by user
                      00118 ;***************************************
018E                  00119 set_rtc_time
                      00120 
                      00121                 rtc_resetAll    ;reset rtc
                          M ;input:         none
                          M ;output:        none
                          M ;desc:          Resets all the time keeping registers on the RTC to zero
018E   1283 1303          M         banksel         0x74
0190   01F4               M         clrf            0x74
0191   1283 1303          M         banksel         0x73
0193   01F3               M         clrf            0x73
0194   2???               M     call        write_rtc               ;Write 0 to Seconds
0195   1283 1303          M         banksel         0x73
MPASM  5.35beta                          MAIN.ASM   6-1-2010  13:03:29         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

Message[305]: Using default destination of 1 (file).
0197   0AF3               M     incf        0x73                    ;Set register address to 1
0198   2???               M         call            write_rtc
0199   1283 1303          M         banksel         0x73
Message[305]: Using default destination of 1 (file).
019B   0AF3               M     incf        0x73                    ;Set register address to 2
019C   2???               M         call            write_rtc
019D   1283 1303          M         banksel         0x73
Message[305]: Using default destination of 1 (file).
019F   0AF3               M     incf        0x73                    ;Set register address to 3
01A0   2???               M         call            write_rtc
01A1   1283 1303          M         banksel         0x73
Message[305]: Using default destination of 1 (file).
01A3   0AF3               M     incf        0x73                    ;Set register address to 4
01A4   2???               M         call            write_rtc
01A5   1283 1303          M         banksel         0x73
Message[305]: Using default destination of 1 (file).
01A7   0AF3               M     incf        0x73                    ;Set register address to 5
01A8   2???               M         call            write_rtc
01A9   1283 1303          M         banksel         0x73
Message[305]: Using default destination of 1 (file).
01AB   0AF3               M     incf        0x73                    ;Set register address to 6
01AC   2???               M         call            write_rtc
                      00122 
                      00123                 rtc_set 0x00,   B'10000000'
                          M ;input:         addliteral: value of address
                          M ;                       datliteral: value of data
                          M ;output:        none
                          M ;desc:          loads the data in datliteral into the 
                          M ;                       address specified by addliteral in the RTC
01AD   1283 1303          M         banksel 0x73
01AF   3000               M         movlw   0x00
01B0   00F3               M         movwf   0x73
01B1   1283 1303          M         banksel 0x74
01B3   3080               M         movlw   B'10000000'
01B4   00F4               M         movwf   0x74    
01B5   2???               M         call    write_rtc
                      00124 
                      00125                 ;set time 
                      00126                 rtc_set 0x06,   B'00010000'             ; Year
                          M ;input:         addliteral: value of address
                          M ;                       datliteral: value of data
                          M ;output:        none
                          M ;desc:          loads the data in datliteral into the 
                          M ;                       address specified by addliteral in the RTC
01B6   1283 1303          M         banksel 0x73
01B8   3006               M         movlw   0x06
01B9   00F3               M         movwf   0x73
01BA   1283 1303          M         banksel 0x74
01BC   3010               M         movlw   B'00010000'
01BD   00F4               M         movwf   0x74    
01BE   2???               M         call    write_rtc
                      00127                 rtc_set 0x05,   B'00000100'             ; Month
MPASM  5.35beta                          MAIN.ASM   6-1-2010  13:03:29         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M ;input:         addliteral: value of address
                          M ;                       datliteral: value of data
                          M ;output:        none
                          M ;desc:          loads the data in datliteral into the 
                          M ;                       address specified by addliteral in the RTC
01BF   1283 1303          M         banksel 0x73
01C1   3005               M         movlw   0x05
01C2   00F3               M         movwf   0x73
01C3   1283 1303          M         banksel 0x74
01C5   3004               M         movlw   B'00000100'
01C6   00F4               M         movwf   0x74    
01C7   2???               M         call    write_rtc
                      00128                 rtc_set 0x04,   B'00000110'             ; Date
                          M ;input:         addliteral: value of address
                          M ;                       datliteral: value of data
                          M ;output:        none
                          M ;desc:          loads the data in datliteral into the 
                          M ;                       address specified by addliteral in the RTC
01C8   1283 1303          M         banksel 0x73
01CA   3004               M         movlw   0x04
01CB   00F3               M         movwf   0x73
01CC   1283 1303          M         banksel 0x74
01CE   3006               M         movlw   B'00000110'
01CF   00F4               M         movwf   0x74    
01D0   2???               M         call    write_rtc
                      00129                 rtc_set 0x03,   B'00000010'             ; Day
                          M ;input:         addliteral: value of address
                          M ;                       datliteral: value of data
                          M ;output:        none
                          M ;desc:          loads the data in datliteral into the 
                          M ;                       address specified by addliteral in the RTC
01D1   1283 1303          M         banksel 0x73
01D3   3003               M         movlw   0x03
01D4   00F3               M         movwf   0x73
01D5   1283 1303          M         banksel 0x74
01D7   3002               M         movlw   B'00000010'
01D8   00F4               M         movwf   0x74    
01D9   2???               M         call    write_rtc
                      00130                 rtc_set 0x02,   B'00010010'             ; Hours
                          M ;input:         addliteral: value of address
                          M ;                       datliteral: value of data
                          M ;output:        none
                          M ;desc:          loads the data in datliteral into the 
                          M ;                       address specified by addliteral in the RTC
01DA   1283 1303          M         banksel 0x73
01DC   3002               M         movlw   0x02
01DD   00F3               M         movwf   0x73
01DE   1283 1303          M         banksel 0x74
01E0   3012               M         movlw   B'00010010'
01E1   00F4               M         movwf   0x74    
01E2   2???               M         call    write_rtc
                      00131                 rtc_set 0x01,   B'00110000'             ; Minutes
                          M ;input:         addliteral: value of address
MPASM  5.35beta                          MAIN.ASM   6-1-2010  13:03:29         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M ;                       datliteral: value of data
                          M ;output:        none
                          M ;desc:          loads the data in datliteral into the 
                          M ;                       address specified by addliteral in the RTC
01E3   1283 1303          M         banksel 0x73
01E5   3001               M         movlw   0x01
01E6   00F3               M         movwf   0x73
01E7   1283 1303          M         banksel 0x74
01E9   3030               M         movlw   B'00110000'
01EA   00F4               M         movwf   0x74    
01EB   2???               M         call    write_rtc
                      00132                 rtc_set 0x00,   B'00000000'             ; Seconds
                          M ;input:         addliteral: value of address
                          M ;                       datliteral: value of data
                          M ;output:        none
                          M ;desc:          loads the data in datliteral into the 
                          M ;                       address specified by addliteral in the RTC
01EC   1283 1303          M         banksel 0x73
01EE   3000               M         movlw   0x00
01EF   00F3               M         movwf   0x73
01F0   1283 1303          M         banksel 0x74
01F2   3000               M         movlw   B'00000000'
01F3   00F4               M         movwf   0x74    
01F4   2???               M         call    write_rtc
01F5   0008           00133                 return
                      00134 
                      00135 
                      00136 ;***************************************
                      00137 ; Delay 1s
                      00138 ;***************************************
01F6                  00139 OneS
  0000                00140                 local   OneS_0
01F6   3010           00141       movlw 0x10
01F7   00??           00142       movwf COUNTH
01F8   307A           00143       movlw 0x7A
01F9   00??           00144       movwf COUNTM
01FA   3006           00145       movlw 0x06
01FB   00??           00146       movwf COUNTL
                      00147 
01FC                  00148 OneS_0
01FC   0B??           00149       decfsz COUNTH, f
01FD   2???           00150       goto   $+2
01FE   0B??           00151       decfsz COUNTM, f
01FF   2???           00152       goto   $+2
0200   0B??           00153       decfsz COUNTL, f
0201   2???           00154       goto   OneS_0
                      00155 
0202   2???           00156       goto $+1
0203   0000           00157       nop
0204   0000           00158       nop
0205   0008           00159                 return
                      00160 
                      00161 
MPASM  5.35beta                          MAIN.ASM   6-1-2010  13:03:29         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

3FF2                  00162           END
MPASM  5.35beta                          MAIN.ASM   6-1-2010  13:03:29         PAGE 11


SYMBOL TABLE
  LABEL                             VALUE 

ACKDT                             00000005
ACKEN                             00000004
ACKSTAT                           00000006
ADCON0                            0000001F
ADCON1                            0000009F
ADCS0                             00000006
ADCS1                             00000007
ADDEN                             00000003
ADFM                              00000007
ADIE                              00000006
ADIF                              00000006
ADON                              00000000
ADRESH                            0000001E
ADRESL                            0000009E
BCLIE                             00000003
BCLIF                             00000003
BF                                00000000
BRGH                              00000002
C                                 00000000
CCP1CON                           00000017
CCP1IE                            00000002
CCP1IF                            00000002
CCP1M0                            00000000
CCP1M1                            00000001
CCP1M2                            00000002
CCP1M3                            00000003
CCP1X                             00000005
CCP1Y                             00000004
CCP2CON                           0000001D
CCP2IE                            00000000
CCP2IF                            00000000
CCP2M0                            00000000
CCP2M1                            00000001
CCP2M2                            00000002
CCP2M3                            00000003
CCP2X                             00000005
CCP2Y                             00000004
CCPR1H                            00000016
CCPR1L                            00000015
CCPR2H                            0000001C
CCPR2L                            0000001B
CHS0                              00000003
CHS1                              00000004
CHS2                              00000005
CKE                               00000006
CKP                               00000004
COUNTH                            00000000
COUNTL                            00000002
COUNTM                            00000001
CREN                              00000004
CSRC                              00000007
ClrLCD                            00000000
D                                 00000005
MPASM  5.35beta                          MAIN.ASM   6-1-2010  13:03:29         PAGE 12


SYMBOL TABLE
  LABEL                             VALUE 

DATA_ADDRESS                      00000005
DC                                00000001
D_A                               00000005
EEADR                             0000010D
EEADRH                            0000010F
EECON1                            0000018C
EECON2                            0000018D
EEDATA                            0000010C
EEDATH                            0000010E
EEIE                              00000004
EEIF                              00000004
EEPGD                             00000007
F                                 00000001
FERR                              00000002
FSR                               00000004
GCEN                              00000007
GIE                               00000007
GO                                00000002
GO_DONE                           00000002
I2C_DATA                          00000005
I2C_READ                          00000002
I2C_START                         00000003
I2C_STOP                          00000004
IBF                               00000007
IBOV                              00000005
INDF                              00000000
INTCON                            0000000B
INTE                              00000004
INTEDG                            00000006
INTF                              00000001
IRP                               00000007
InitLCD                           00000000
NOT_A                             00000005
NOT_ADDRESS                       00000005
NOT_BO                            00000000
NOT_BOR                           00000000
NOT_DONE                          00000002
NOT_PD                            00000003
NOT_POR                           00000001
NOT_RBPU                          00000007
NOT_RC8                           00000006
NOT_T1SYNC                        00000002
NOT_TO                            00000004
NOT_TX8                           00000006
NOT_W                             00000002
NOT_WRITE                         00000002
OBF                               00000006
OERR                              00000001
OPTION_REG                        00000081
OneS                              000001F6
P                                 00000004
PCFG0                             00000000
PCFG1                             00000001
MPASM  5.35beta                          MAIN.ASM   6-1-2010  13:03:29         PAGE 13


SYMBOL TABLE
  LABEL                             VALUE 

PCFG2                             00000002
PCFG3                             00000003
PCL                               00000002
PCLATH                            0000000A
PCON                              0000008E
PEIE                              00000006
PEN                               00000002
PIE1                              0000008C
PIE2                              0000008D
PIR1                              0000000C
PIR2                              0000000D
PORTA                             00000005
PORTB                             00000006
PORTC                             00000007
PORTD                             00000008
PORTE                             00000009
PR2                               00000092
PS0                               00000000
PS1                               00000001
PS2                               00000002
PSA                               00000003
PSPIE                             00000007
PSPIF                             00000007
PSPMODE                           00000004
R                                 00000002
RBIE                              00000003
RBIF                              00000000
RC8_9                             00000006
RC9                               00000006
RCD8                              00000000
RCEN                              00000003
RCIE                              00000005
RCIF                              00000005
RCREG                             0000001A
RCSTA                             00000018
RD                                00000000
READ_WRITE                        00000002
RP0                               00000005
RP1                               00000006
RSEN                              00000001
RX9                               00000006
RX9D                              00000000
R_W                               00000002
S                                 00000003
SEN                               00000000
SMP                               00000007
SPBRG                             00000099
SPEN                              00000007
SREN                              00000005
SSPADD                            00000093
SSPBUF                            00000013
SSPCON                            00000014
SSPCON2                           00000091
MPASM  5.35beta                          MAIN.ASM   6-1-2010  13:03:29         PAGE 14


SYMBOL TABLE
  LABEL                             VALUE 

SSPEN                             00000005
SSPIE                             00000003
SSPIF                             00000003
SSPM0                             00000000
SSPM1                             00000001
SSPM2                             00000002
SSPM3                             00000003
SSPOV                             00000006
SSPSTAT                           00000094
STATUS                            00000003
SYNC                              00000004
T0CS                              00000005
T0IE                              00000005
T0IF                              00000002
T0SE                              00000004
T1CKPS0                           00000004
T1CKPS1                           00000005
T1CON                             00000010
T1INSYNC                          00000002
T1OSCEN                           00000003
T1SYNC                            00000002
T2CKPS0                           00000000
T2CKPS1                           00000001
T2CON                             00000012
TMR0                              00000001
TMR1CS                            00000001
TMR1H                             0000000F
TMR1IE                            00000000
TMR1IF                            00000000
TMR1L                             0000000E
TMR1ON                            00000000
TMR2                              00000011
TMR2IE                            00000001
TMR2IF                            00000001
TMR2ON                            00000002
TOUTPS0                           00000003
TOUTPS1                           00000004
TOUTPS2                           00000005
TOUTPS3                           00000006
TRISA                             00000085
TRISB                             00000086
TRISC                             00000087
TRISD                             00000088
TRISE                             00000089
TRISE0                            00000000
TRISE1                            00000001
TRISE2                            00000002
TRMT                              00000001
TX8_9                             00000006
TX9                               00000006
TX9D                              00000000
TXD8                              00000000
TXEN                              00000005
MPASM  5.35beta                          MAIN.ASM   6-1-2010  13:03:29         PAGE 15


SYMBOL TABLE
  LABEL                             VALUE 

TXIE                              00000004
TXIF                              00000004
TXREG                             00000019
TXSTA                             00000098
UA                                00000001
W                                 00000000
WCOL                              00000007
WR                                00000001
WREN                              00000002
WRERR                             00000003
WR_DATA                           00000000
WR_INS                            00000000
Z                                 00000002
_.org_1_01FD                      000001FD
_.org_1_01FF                      000001FF
_.org_1_0202                      00000202
_BODEN_OFF                        00003FBF
_BODEN_ON                         00003FFF
_CPD_OFF                          00003FFF
_CPD_ON                           00003EFF
_CP_ALL                           00000FCF
_CP_HALF                          00001FDF
_CP_OFF                           00003FFF
_CP_UPPER_256                     00002FEF
_DEBUG_OFF                        00003FFF
_DEBUG_ON                         000037FF
_HS_OSC                           00003FFE
_LP_OSC                           00003FFC
_LVP_OFF                          00003F7F
_LVP_ON                           00003FFF
_PWRTE_OFF                        00003FFF
_PWRTE_ON                         00003FF7
_RC_OSC                           00003FFF
_WDT_OFF                          00003FFB
_WDT_ON                           00003FFF
_WRT_ENABLE_OFF                   00003DFF
_WRT_ENABLE_ON                    00003FFF
_XT_OSC                           00003FFD
__16F877                          00000001
__DEBUG                           1
i2c_common_setup                  00000000
init                              00000100
read_rtc                          00000000
rtc_convert                       00000000
rtc_read                          
rtc_resetAll                      
rtc_set                           
set_rtc_time                      0000018E
show_RTC                          0000012E
write_rtc                         00000000

MPASM  5.35beta                          MAIN.ASM   6-1-2010  13:03:29         PAGE 16





Errors   :     0
Warnings :     3 reported,     0 suppressed
Messages :    18 reported,     0 suppressed

