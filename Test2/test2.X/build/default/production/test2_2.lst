MPASM  5.48                       TEST2_2.ASM   2-6-2013  7:36:21         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 #include <p16f877.inc>
                      00001         LIST
                      00002 
                      00003 ;==========================================================================
                      00004 ;  MPASM PIC16F877 processor include
                      00005 ; 
                      00006 ;  (c) Copyright 1999-2012 Microchip Technology, All rights reserved
                      00007 ;==========================================================================
                      00008 
                      00540         LIST
                      00002 #include <common.inc>
                      00001         ;extern LCD_init, LCD_clear, LCD_line2s, LCD_out, LCD_wt, delay50us, delay5ms, delayX5msm, delay
                            100ms, delayX100msm, delay1sl
                      00002 
                      00003 
                      00004         #define DEBUG
                      00005         #define NULL 0x00 ; must not change
                      00006         #define FALSE 0x00 ; must not change
                      00007         #define TRUE 0xFF ; must not change
                      00008         #define KEYPAD_DA PORTB, 1
                      00009         #define SMOTOR_S0 PORTD, 0
                      00010         #define SMOTOR_S1 PORTD, 1
                      00011         #define SMOTOR_S2 PORTE, 0
                      00012         #define SMOTOR_S3 PORTE, 1
                      00013         #define SMOTOR_EN PORTE, 2
                      00014         #define VMOTOR_C0 PORTC, 0
                      00015         #define VMOTOR_C1 PORTC, 1
                      00016         #define IRLED PORTC, 2
                      00017         #define FB_TOP PORTC, 5
                      00018         ; #define FB_BOT PORTC, 6
                      00019         #define FB_ROW4 PORTC, 7
                      00020         #define LCD_RS PORTD, 2
                      00021         #define LCD_E PORTD, 3
                      00022         #define LCD_PORT PORTD
                      00023         #define CL_POS_BIT 0
                      00024         #define CL_FN_BIT 1
                      00025         #define CL_ERR_BIT 2
                      00026         #define STOP_BUT 0x0B ; stop buttom
                      00027         #define PHASE_HDINIT 0 ; Phase 0: Hardware Initialization/Reset
                      00028         #define PHASE_RTCINIT 1 ; Phase 1: RTC Initialization/Reset
                      00029         #define PHASE_REALTIME 2 ; Phase 2: Real Time
                      00030         #define PHASE_NOREPORT 3 ; Phase 3: No Report
                      00031         #define PHASE_REPORT 4 ; Phase 4: Report Review
                      00032         #define PHASE_RUN 5 ; Phase 5: Inspection Run
                      00033         #define PHASE_FINISH 6 ; Phase 6: Inspection Finish
                      00034         ; pull-up diable, Timer0 internal clk, pos edge, 1:64
                      00035         #define INITVAL_OPTREG B'10000101'
                      00036         #define INITVAL_TRISA B'00101111'
                      00037         #define INITVAL_TRISB B'11110010'
                      00038         #define INITVAL_TRISC B'10100000' ;B'11100000'!!!!
                      00039         #define INITVAL_TRISD B'00000000'
                      00040         #define INITVAL_TRISE B'00000000'
                      00041         #define INITVAL_ADCON0 B'10000001' ; 32Tosc, AN0, ADC on
MPASM  5.48                       TEST2_2.ASM   2-6-2013  7:36:21         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00042         #define INITVAL_ADCON1 B'00000010' ; left justified, 5 channel, 0 Vref
                      00043 ;******************CONSTANTS****************************************************
  00000009            00044 MAXLINE EQU .9 ; (max "line_num" - 1) in report phase
  00000014            00045 MAXPOS EQU .20 ; total positions = ROWS*COLS
  00000004            00046 ROWS EQU .4 ; total 4 rows to move
  00000005            00047 COLS EQU .5 ; total 5 cols in a row
  00000003            00048 MAXCLINROW EQU .3 ; max number of CLs possible in a row
  0000001E            00049 DCDOWNDELAY EQU .30 ; * 0.1s == elapse time for DC motor to drive down
  0000001C            00050 SMOTOR_STEPS EQU .28 ; * 4 == # of steps that stepper motor need to turn
  00000006            00051 SMOTOR_SPD_F EQU .6 ; speed fact: speed = 1 step / (SMOTOR_SPD_F * 5ms)
  00000050            00052 THD_CL3LED EQU .80 ; threshold to distinguish between 2 LEDs and 3LEDS
  0000001C            00053 THD_IRLED EQU .28 ; threshold for infrared reflected light
  00000005            00054 THD_BG EQU .5 ; threshold for background variation (add to light_bg)
  0000000C            00055 MAXLOG EQU .12 ; max number of log
  00000006            00056 MAXLOGBANK EQU .6 ; max number of log per bank = MAXLOG/2
  00000010            00057 LOGLENGTH EQU .16 ; length of each log entry
  00000004            00058 LIGHTAVGX EQU .4 ; number of sample light sensor reading to be averaged
                      00059 ;******************MACROS*******************************************************
                      00060 BANK0 macro
                      00061         bcf STATUS, RP0
                      00062         endm
                      00063 BANK1 macro
                      00064         bsf STATUS, RP0
                      00065         endm
                      00066 BANK00 macro
                      00067         bcf STATUS, IRP
                      00068         bcf STATUS, RP1
                      00069         bcf STATUS, RP0
                      00070         endm
                      00071         ;BANK02 macro
                      00072         ; bsf STATUS, IRP
                      00073         ; bsf STATUS, RP1
                      00074         ; bcf STATUS, RP0
                      00075         ; endm
                      00076         ;
                      00077         ;BANK03 macro
                      00078         ; bsf STATUS, IRP
                      00079         ; bsf STATUS, RP1
                      00080         ; bsf STATUS, RP0
                      00081         ; endm
                      00082         ; Affect W!
                      00083 MOVFF macro dest, orig
                      00084         movf orig, w
                      00085         movwf dest
                      00086         endm
                      00087 ; Affect W!
                      00088 MOVLF macro dest, literal
                      00089         movlw literal
                      00090         movwf dest
                      00091         endm
                      00092         
Warning[205]: Found directive in column 1. (cblock)
                      00003 cblock 0xA0
MPASM  5.48                       TEST2_2.ASM   2-6-2013  7:36:21         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  000000A0            00004         delaytemp
  000000A1            00005         delaycount
  000000A2            00006         delaytemp2
  000000A3            00007         delaycount2
  000000A4            00008         delaytemp3
  000000A5            00009         delaycount3
Warning[205]: Found directive in column 1. (ENDC)
                      00010 endc
                      00011 
Warning[205]: Found directive in column 1. (code)
                      00012 code
Warning[205]: Found directive in column 1. (global)
  0000                00013 global delay50us, delay5ms, delayX5msm, delay100ms, delayX100msm, delay1sl
                      00014 ;*******************************************************************************
                      00015 ; "dalay50us": 50us Delay Function
                      00016 ; Func: Precisely dalay 50 microsecond for 10Mz (125cycles*4)
                      00017 ; including the time this function being called
                      00018 ; Input: None
                      00019 ; Output: None
                      00020 ; Affect: STATUS, delaytemp, delaycount
                      00021 ; Runtime: 50.0 us
                      00022 ;*******************************************************************************
0000                  00023 delay50us
                      00024         ; call function cost 2 cycles
                      00025         ;BANK1 ; 2 cycles
0000   1303           00026         bcf STATUS, RP1
0001   1683           00027         bsf STATUS, RP0
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0002   00A0           00028         movwf delaytemp ; protect the data in w, 1 cycle
0003   3026           00029         movlw 0x26 ; 38, 1 cycle
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0004   00A1           00030         movwf delaycount ; 1 cycle
0005                  00031 delay50us_loop ; ((1+2)*38)-1 = 113 cycles
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0005   0BA1           00032         decfsz delaycount, f
0006   2???           00033         goto delay50us_loop
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0007   0820           00034         movf delaytemp, w ; resume w, 1 cycle
                      00035         ;BANK0 ; 2 cycles
0008   1283           00036         bcf STATUS, RP0
0009   0000           00037         nop
000A   0008           00038         return ; 2 cycles
                      00039 ;*******************************************************************************
                      00040 ; "dalay5ms": 5ms Delay Function
                      00041 ; Func: Precisely dalay 5 millisecond for 10Mz (100*125cycles*4)
                      00042 ; including the time this function being called
                      00043 ; Input: None
                      00044 ; Output: None
                      00045 ; Affect: STATUS, delaytemp, delaycount, delaytemp2, delaycount2
                      00046 ; Runtime: 5,000.0 us
                      00047 ;*******************************************************************************
000B                  00048 delay5ms
                      00049         ; call function cost 2 cycles
MPASM  5.48                       TEST2_2.ASM   2-6-2013  7:36:21         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00050         ;BANK1 ; 2 cycles
000B   1303           00051         bcf STATUS, RP1
000C   1683           00052         bsf STATUS, RP0
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
000D   00A2           00053         movwf delaytemp2 ; protect the data in w, 1 cycle
                      00054         ; 5 cycles to this point
000E   3060           00055         movlw 0x60 ; 96, 1 cycle
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
000F   00A3           00056         movwf delaycount2 ; 1 cycle
0010                  00057 delay5ms_loop ; (130*96)-1 = 12479 cycles
                      00058         ;call delay50us ; (125 cycles)
0010   0000           00059         nop
                      00060          ;BANK1 ; 2 cycles
0011   1303           00061         bcf STATUS, RP1
0012   1683           00062         bsf STATUS, RP0
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0013   00A0           00063         movwf delaytemp ; protect the data in w, 1 cycle
0014   3027           00064         movlw 0x27 ; 39, 1 cycle
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0015   00A1           00065         movwf delaycount ; 1 cycle
0016                  00066 delay5ms_50us_loop ; ((1+2)*39)-1 = 116 cycles
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0016   0BA1           00067         decfsz delaycount, f
0017   2???           00068         goto delay5ms_50us_loop
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0018   0820           00069         movf delaytemp, w ; resume w, 1 cycle
                      00070         ;BANK0 ; 2 cycles
0019   1283           00071         bcf STATUS, RP0
001A   0000           00072         nop
                      00073         ;BANK1 ; delay50us will reset Bank to 0, (2 cycles)
001B   1303           00074         bcf STATUS, RP1
001C   1683           00075         bsf STATUS, RP0
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
001D   0BA3           00076         decfsz delaycount2, f ; (1(2) cycle)
001E   2???           00077         goto delay5ms_loop ; (2 cycle)
                      00078         ; 12486 cycles to this point
001F   3002           00079         movlw 0x02 ; 2, 1 cycle
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0020   00A3           00080         movwf delaycount2 ; 1 cycle
0021                  00081 delay5ms_loop2 ; (3*2)-1 = 5 cycles
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0021   0BA3           00082         decfsz delaycount2, f
0022   2???           00083         goto delay5ms_loop2
                      00084         ; 12493 cycles to this point
0023   0000           00085         nop ; 1 cycle
0024   0000           00086         nop ; 1 cycle
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0025   0822           00087         movf delaytemp2, w ; resume w, 1 cycle
                      00088         ;BANK0 ; 2 cycles
0026   1283           00089         bcf STATUS, RP0
0027   0000           00090         nop
0028   0008           00091         return ; 2 cycles
                      00092 ;*******************************************************************************
MPASM  5.48                       TEST2_2.ASM   2-6-2013  7:36:21         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00093 ; "dalayX5msm": Multiple of 5ms More Delay Function (less than 0.1% error)
                      00094 ; Func: Delay slightly more than 5*W millisecond for 10Mz
                      00095 ; precisely dalay (5.002*W+0.0032) ms ((12,505*W+8) cycles)
                      00096 ; including the time this function being called
                      00097 ; Input: W = numbers of 5ms to delay
                      00098 ; Output: None
                      00099 ; Affect: STATUS, delaytemp, delaycount, delaytemp2, delaycount2,
                      00100 ; delaycount3
                      00101 ; Runtime: (5,002.0*W + 3.2) us
                      00102 ;*******************************************************************************
0029                  00103 delayX5msm
                      00104         ; call function cost 2 cycles
                      00105         ;BANK1 ; 2 cycles
0029   1303           00106         bcf STATUS, RP1
002A   1683           00107         bsf STATUS, RP0
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
002B   00A5           00108         movwf delaycount3 ; 1 cycle
002C                  00109 delayX5msm_loop ; (12505*W-1) cycles
002C   2???           00110         call delay5ms
                      00111         ;BANK1 ; delay5ms will reset Bank to 0
002D   1303           00112         bcf STATUS, RP1
002E   1683           00113         bsf STATUS, RP0
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
002F   0BA5           00114         decfsz delaycount3, f
0030   2???           00115         goto delayX5msm_loop
                      00116         ;BANK0 ; 2 cycles
0031   1283           00117         bcf STATUS, RP0
0032   0000           00118         nop
0033   0008           00119         return ; 2 cycles
                      00120 ;*******************************************************************************
                      00121 ; "dalay100ms": 100ms Delay Function
                      00122 ; Func: Precisely dalay 100 millisecond for 10Mz (250,004cycles)
                      00123 ; including the time this function being called
                      00124 ; Input: None
                      00125 ; Output: None
                      00126 ; Affect: STATUS, delaytemp, delaycount, delaytemp2, delaycount2
                      00127 ; Runtime: 100,001.6 us
                      00128 ;*******************************************************************************
0034                  00129 delay100ms
                      00130         ; call function cost 2 cycles
                      00131         ;BANK1 ; 2 cycles
0034   1303           00132         bcf STATUS, RP1
0035   1683           00133         bsf STATUS, RP0
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0036   00A2           00134         movwf delaytemp2 ; protect the data in w, 1 cycle
                      00135         ; 5 cycles to this point
0037   30F9           00136         movlw 0xF9 ; 249, 1 cycle
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0038   00A3           00137         movwf delaycount2 ; 1 cycle
0039                  00138 delay100ms_loop ; (1004*250)-1 = 249,995 cycles
0039   30FA           00139         movlw 0xFA ; 250, 1 cycle
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
003A   00A1           00140         movwf delaycount ; 1 cycle
MPASM  5.48                       TEST2_2.ASM   2-6-2013  7:36:21         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

003B                  00141 delay100ms_loop2 ; (4*250)-1 = 999 cycles
003B   0000           00142         nop
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
003C   0BA1           00143         decfsz delaycount, f
003D   2???           00144         goto delay100ms_loop2
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
003E   0BA3           00145         decfsz delaycount2, f ; (1(2) cycle)
003F   2???           00146         goto delay100ms_loop ; (2 cycle)
                      00147         ; 250,000 cycles to this point
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0040   0822           00148         movf delaytemp2, w ; resume w, 1 cycle
                      00149         ;BANK0 ; 1 cycles
0041   1283           00150         bcf STATUS, RP0
0042   0008           00151         return ; 2 cycles
                      00152 ;*******************************************************************************
                      00153 ; "dalayX100msm": Multiple of 100ms More Delay Function(less than 0.01% error)
                      00154 ; Func: Delay slightly more than 100*W millisecond for 10Mz
                      00155 ; precisely dalay (0.100002*W+0.0000032) s
                      00156 ; ((250,009*W+8) cycles)
                      00157 ; including the time this function being called
                      00158 ; Input: W = numbers of 100ms to delay
                      00159 ; Output: None
                      00160 ; Affect: STATUS, delaytemp, delaycount, delaytemp2, delaycount2,
                      00161 ; delaycount3
                      00162 ; Runtime: (100,003.6*W + 3.2) us
                      00163 ;*******************************************************************************
0043                  00164 delayX100msm
                      00165         ; call function cost 2 cycles
                      00166         ;BANK1 ; 2 cycles
0043   1303           00167         bcf STATUS, RP1
0044   1683           00168         bsf STATUS, RP0
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0045   00A5           00169         movwf delaycount3 ; 1 cycle
0046                  00170 delayX100msm_loop ; (250,009*W-1) cycles
0046   2???           00171         call delay100ms
                      00172         ;BANK1 ; delay100ms will reset Bank to 0
0047   1303           00173         bcf STATUS, RP1
0048   1683           00174         bsf STATUS, RP0
Warning[203]: Found opcode in column 1. (decfsz)
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0049   0BA5           00175 decfsz delaycount3, f
004A   2???           00176          goto delayX100msm_loop
                      00177         ;BANK0 ; 2 cycles
004B   1283           00178         bcf STATUS, RP0
004C   0000           00179         nop
004D   0008           00180         return ; 2 cycles
                      00181 ;*******************************************************************************
                      00182 ; "dalay1sl": 1s Less Delay Function
                      00183 ; Func: Dalay slightly less than 1 second for 10Mz,
                      00184 ; precisely delay 999.0428ms (2,497,607 cycles)
                      00185 ; including the time this function being called
                      00186 ; Input: None
                      00187 ; Output: None
MPASM  5.48                       TEST2_2.ASM   2-6-2013  7:36:21         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00188 ; Affect: STATUS, delaytemp, delaycount, delaytemp2, delaycount2,
                      00189 ; delaytemp3, delaycount3
                      00190 ; Runtime: 999,042.8 us
                      00191 ;*******************************************************************************
004E                  00192 delay1sl
                      00193         ; call function cost 2 cycles
                      00194         ;BANK1 ; 2 cycles
004E   1303           00195         bcf STATUS, RP1
004F   1683           00196         bsf STATUS, RP0
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0050   00A4           00197         movwf delaytemp3 ; protect the data in w, 1 cycle
                      00198         ; 5 cycles to this point
0051   30C7           00199         movlw 0xC7 ; 199, 1 cycle
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0052   00A5           00200         movwf delaycount3 ; 1 cycle
0053                  00201 delay1sl_loop ; (12505*199)-1 = 2,488,494 cycles
0053   2???           00202         call delay5ms ; (12500 cycles)
                      00203         ;BANK1 ; delay5ms will reset Bank to 0, (2 cycles)
0054   1303           00204         bcf STATUS, RP1
0055   1683           00205         bsf STATUS, RP0
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0056   0BA5           00206         decfsz delaycount3, f ; (1(2) cycle)
0057   2???           00207         goto delay1sl_loop ; (2 cycle)
                      00208         ; 2,488,501 cycles to this point
0058   3046           00209         movlw 0x46 ; 70, 1 cycle
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0059   00A5           00210         movwf delaycount3 ; 1 cycle
005A                  00211 delay1sl_loop2 ; (130*69)-1 = 9099 cycles
005A   2???           00212         call delay50us ; (125 cycles)
                      00213         ;BANK1 ; delay50us will reset Bank to 0, (2 cycles)
005B   1303           00214         bcf STATUS, RP1
005C   1683           00215         bsf STATUS, RP0
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
005D   0BA5           00216         decfsz delaycount3, f
005E   2???           00217         goto delay1sl_loop2
                      00218         ; 2,497,602 cycles to this point
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
005F   0824           00219         movf delaytemp3, w ; resume w, 1 cycle
                      00220         ;BANK0 ; 2 cycles
0060   1283           00221         bcf STATUS, RP0
0061   0000           00222         nop
0062   0008           00223         return ; 2 cycles
                      00224         end
MPASM  5.48                       TEST2_2.ASM   2-6-2013  7:36:21         PAGE  8


SYMBOL TABLE
  LABEL                             VALUE 

ACKDT                             00000005
ACKEN                             00000004
ACKSTAT                           00000006
ADCON0                            0000001F
ADCON1                            0000009F
ADCS0                             00000006
ADCS1                             00000007
ADDEN                             00000003
ADFM                              00000007
ADIE                              00000006
ADIF                              00000006
ADON                              00000000
ADRESH                            0000001E
ADRESL                            0000009E
BANK0                             
BANK00                            
BANK1                             
BCLIE                             00000003
BCLIF                             00000003
BF                                00000000
BRGH                              00000002
C                                 00000000
CCP1CON                           00000017
CCP1IE                            00000002
CCP1IF                            00000002
CCP1M0                            00000000
CCP1M1                            00000001
CCP1M2                            00000002
CCP1M3                            00000003
CCP1X                             00000005
CCP1Y                             00000004
CCP2CON                           0000001D
CCP2IE                            00000000
CCP2IF                            00000000
CCP2M0                            00000000
CCP2M1                            00000001
CCP2M2                            00000002
CCP2M3                            00000003
CCP2X                             00000005
CCP2Y                             00000004
CCPR1                             00000015
CCPR1H                            00000016
CCPR1L                            00000015
CCPR2                             0000001B
CCPR2H                            0000001C
CCPR2L                            0000001B
CHS0                              00000003
CHS1                              00000004
CHS2                              00000005
CKE                               00000006
CKP                               00000004
CL_ERR_BIT                        2
CL_FN_BIT                         1
MPASM  5.48                       TEST2_2.ASM   2-6-2013  7:36:21         PAGE  9


SYMBOL TABLE
  LABEL                             VALUE 

CL_POS_BIT                        0
COLS                              00000005
CREN                              00000004
CSRC                              00000007
D                                 00000005
DATA_ADDRESS                      00000005
DC                                00000001
DCDOWNDELAY                       0000001E
DEBUG                             
D_A                               00000005
D_NOT_A                           00000005
EEADR                             0000010D
EEADRH                            0000010F
EECON1                            0000018C
EECON2                            0000018D
EEDATA                            0000010C
EEDATH                            0000010E
EEIE                              00000004
EEIF                              00000004
EEPGD                             00000007
F                                 00000001
FALSE                             0x00
FB_ROW4                           PORTC, 7
FB_TOP                            PORTC, 5
FERR                              00000002
FSR                               00000004
GCEN                              00000007
GIE                               00000007
GO                                00000002
GO_DONE                           00000002
GO_NOT_DONE                       00000002
I2C_DATA                          00000005
I2C_READ                          00000002
I2C_START                         00000003
I2C_STOP                          00000004
IBF                               00000007
IBOV                              00000005
INDF                              00000000
INITVAL_ADCON0                    B'10000001'
INITVAL_ADCON1                    B'00000010'
INITVAL_OPTREG                    B'10000101'
INITVAL_TRISA                     B'00101111'
INITVAL_TRISB                     B'11110010'
INITVAL_TRISC                     B'10100000'
INITVAL_TRISD                     B'00000000'
INITVAL_TRISE                     B'00000000'
INTCON                            0000000B
INTE                              00000004
INTEDG                            00000006
INTF                              00000001
IRLED                             PORTC, 2
IRP                               00000007
KEYPAD_DA                         PORTB, 1
MPASM  5.48                       TEST2_2.ASM   2-6-2013  7:36:21         PAGE 10


SYMBOL TABLE
  LABEL                             VALUE 

LCD_E                             PORTD, 3
LCD_PORT                          PORTD
LCD_RS                            PORTD, 2
LIGHTAVGX                         00000004
LOGLENGTH                         00000010
MAXCLINROW                        00000003
MAXLINE                           00000009
MAXLOG                            0000000C
MAXLOGBANK                        00000006
MAXPOS                            00000014
MOVFF                             
MOVLF                             
NOT_A                             00000005
NOT_ADDRESS                       00000005
NOT_BO                            00000000
NOT_BOR                           00000000
NOT_DONE                          00000002
NOT_PD                            00000003
NOT_POR                           00000001
NOT_RBPU                          00000007
NOT_RC8                           00000006
NOT_T1SYNC                        00000002
NOT_TO                            00000004
NOT_TX8                           00000006
NOT_W                             00000002
NOT_WRITE                         00000002
NULL                              0x00
OBF                               00000006
OERR                              00000001
OPTION_REG                        00000081
P                                 00000004
PCFG0                             00000000
PCFG1                             00000001
PCFG2                             00000002
PCFG3                             00000003
PCL                               00000002
PCLATH                            0000000A
PCON                              0000008E
PEIE                              00000006
PEN                               00000002
PHASE_FINISH                      6
PHASE_HDINIT                      0
PHASE_NOREPORT                    3
PHASE_REALTIME                    2
PHASE_REPORT                      4
PHASE_RTCINIT                     1
PHASE_RUN                         5
PIE1                              0000008C
PIE2                              0000008D
PIR1                              0000000C
PIR2                              0000000D
PORTA                             00000005
PORTB                             00000006
MPASM  5.48                       TEST2_2.ASM   2-6-2013  7:36:21         PAGE 11


SYMBOL TABLE
  LABEL                             VALUE 

PORTC                             00000007
PORTD                             00000008
PORTE                             00000009
PR2                               00000092
PS0                               00000000
PS1                               00000001
PS2                               00000002
PSA                               00000003
PSPIE                             00000007
PSPIF                             00000007
PSPMODE                           00000004
R                                 00000002
RA0                               00000000
RA1                               00000001
RA2                               00000002
RA3                               00000003
RA4                               00000004
RA5                               00000005
RB0                               00000000
RB1                               00000001
RB2                               00000002
RB3                               00000003
RB4                               00000004
RB5                               00000005
RB6                               00000006
RB7                               00000007
RBIE                              00000003
RBIF                              00000000
RC0                               00000000
RC1                               00000001
RC2                               00000002
RC3                               00000003
RC4                               00000004
RC5                               00000005
RC6                               00000006
RC7                               00000007
RC8_9                             00000006
RC9                               00000006
RCD8                              00000000
RCEN                              00000003
RCIE                              00000005
RCIF                              00000005
RCREG                             0000001A
RCSTA                             00000018
RD                                00000000
RD0                               00000000
RD1                               00000001
RD2                               00000002
RD3                               00000003
RD4                               00000004
RD5                               00000005
RD6                               00000006
RD7                               00000007
MPASM  5.48                       TEST2_2.ASM   2-6-2013  7:36:21         PAGE 12


SYMBOL TABLE
  LABEL                             VALUE 

RE0                               00000000
RE1                               00000001
RE2                               00000002
READ_WRITE                        00000002
ROWS                              00000004
RP0                               00000005
RP1                               00000006
RSEN                              00000001
RX9                               00000006
RX9D                              00000000
R_NOT_W                           00000002
R_W                               00000002
S                                 00000003
SEN                               00000000
SMOTOR_EN                         PORTE, 2
SMOTOR_S0                         PORTD, 0
SMOTOR_S1                         PORTD, 1
SMOTOR_S2                         PORTE, 0
SMOTOR_S3                         PORTE, 1
SMOTOR_SPD_F                      00000006
SMOTOR_STEPS                      0000001C
SMP                               00000007
SPBRG                             00000099
SPEN                              00000007
SREN                              00000005
SSPADD                            00000093
SSPBUF                            00000013
SSPCON                            00000014
SSPCON2                           00000091
SSPEN                             00000005
SSPIE                             00000003
SSPIF                             00000003
SSPM0                             00000000
SSPM1                             00000001
SSPM2                             00000002
SSPM3                             00000003
SSPOV                             00000006
SSPSTAT                           00000094
STATUS                            00000003
STOP_BUT                          0x0B
SYNC                              00000004
T0CS                              00000005
T0IE                              00000005
T0IF                              00000002
T0SE                              00000004
T1CKPS0                           00000004
T1CKPS1                           00000005
T1CON                             00000010
T1INSYNC                          00000002
T1OSCEN                           00000003
T1SYNC                            00000002
T2CKPS0                           00000000
T2CKPS1                           00000001
MPASM  5.48                       TEST2_2.ASM   2-6-2013  7:36:21         PAGE 13


SYMBOL TABLE
  LABEL                             VALUE 

T2CON                             00000012
THD_BG                            00000005
THD_CL3LED                        00000050
THD_IRLED                         0000001C
TMR0                              00000001
TMR0IE                            00000005
TMR0IF                            00000002
TMR1                              0000000E
TMR1CS                            00000001
TMR1H                             0000000F
TMR1IE                            00000000
TMR1IF                            00000000
TMR1L                             0000000E
TMR1ON                            00000000
TMR2                              00000011
TMR2IE                            00000001
TMR2IF                            00000001
TMR2ON                            00000002
TOUTPS0                           00000003
TOUTPS1                           00000004
TOUTPS2                           00000005
TOUTPS3                           00000006
TRISA                             00000085
TRISA0                            00000000
TRISA1                            00000001
TRISA2                            00000002
TRISA3                            00000003
TRISA4                            00000004
TRISA5                            00000005
TRISB                             00000086
TRISB0                            00000000
TRISB1                            00000001
TRISB2                            00000002
TRISB3                            00000003
TRISB4                            00000004
TRISB5                            00000005
TRISB6                            00000006
TRISB7                            00000007
TRISC                             00000087
TRISC0                            00000000
TRISC1                            00000001
TRISC2                            00000002
TRISC3                            00000003
TRISC4                            00000004
TRISC5                            00000005
TRISC6                            00000006
TRISC7                            00000007
TRISD                             00000088
TRISD0                            00000000
TRISD1                            00000001
TRISD2                            00000002
TRISD3                            00000003
TRISD4                            00000004
MPASM  5.48                       TEST2_2.ASM   2-6-2013  7:36:21         PAGE 14


SYMBOL TABLE
  LABEL                             VALUE 

TRISD5                            00000005
TRISD6                            00000006
TRISD7                            00000007
TRISE                             00000089
TRISE0                            00000000
TRISE1                            00000001
TRISE2                            00000002
TRMT                              00000001
TRUE                              0xFF
TX8_9                             00000006
TX9                               00000006
TX9D                              00000000
TXD8                              00000000
TXEN                              00000005
TXIE                              00000004
TXIF                              00000004
TXREG                             00000019
TXSTA                             00000098
UA                                00000001
VMOTOR_C0                         PORTC, 0
VMOTOR_C1                         PORTC, 1
W                                 00000000
WCOL                              00000007
WR                                00000001
WREN                              00000002
WRERR                             00000003
Z                                 00000002
_BODEN_OFF                        00003FBF
_BODEN_ON                         00003FFF
_BOREN_OFF                        00003FBF
_BOREN_ON                         00003FFF
_CONFIG                           00002007
_CPD_OFF                          00003FFF
_CPD_ON                           00003EFF
_CP_ALL                           00000FCF
_CP_HALF                          00001FDF
_CP_OFF                           00003FFF
_CP_UPPER_256                     00002FEF
_DEBUG_OFF                        00003FFF
_DEBUG_ON                         000037FF
_DEVID1                           00002006
_FOSC_EXTRC                       00003FFF
_FOSC_HS                          00003FFE
_FOSC_LP                          00003FFC
_FOSC_XT                          00003FFD
_HS_OSC                           00003FFE
_IDLOC0                           00002000
_IDLOC1                           00002001
_IDLOC2                           00002002
_IDLOC3                           00002003
_LP_OSC                           00003FFC
_LVP_OFF                          00003F7F
_LVP_ON                           00003FFF
MPASM  5.48                       TEST2_2.ASM   2-6-2013  7:36:21         PAGE 15


SYMBOL TABLE
  LABEL                             VALUE 

_PWRTE_OFF                        00003FFF
_PWRTE_ON                         00003FF7
_RC_OSC                           00003FFF
_WDTE_OFF                         00003FFB
_WDTE_ON                          00003FFF
_WDT_OFF                          00003FFB
_WDT_ON                           00003FFF
_WRT_ENABLE_OFF                   00003DFF
_WRT_ENABLE_ON                    00003FFF
_WRT_OFF                          00003DFF
_WRT_ON                           00003FFF
_XT_OSC                           00003FFD
__16F877                          00000001
delay100ms                        00000034
delay100ms_loop                   00000039
delay100ms_loop2                  0000003B
delay1sl                          0000004E
delay1sl_loop                     00000053
delay1sl_loop2                    0000005A
delay50us                         00000000
delay50us_loop                    00000005
delay5ms                          0000000B
delay5ms_50us_loop                00000016
delay5ms_loop                     00000010
delay5ms_loop2                    00000021
delayX100msm                      00000043
delayX100msm_loop                 00000046
delayX5msm                        00000029
delayX5msm_loop                   0000002C
delaycount                        000000A1
delaycount2                       000000A3
delaycount3                       000000A5
delaytemp                         000000A0
delaytemp2                        000000A2
delaytemp3                        000000A4

Errors   :     0
Warnings :     5 reported,     0 suppressed
Messages :    30 reported,     0 suppressed

